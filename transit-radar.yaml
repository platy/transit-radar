apiVersion: apps/v1
kind: Deployment
metadata:
  name: transit-radar
spec:
  selector:
    matchLabels:
      app: transit-radar
  template:
    metadata:
      labels:
        app: transit-radar
    spec:
      containers:
      - name: transit-radar
        image: rg.nl-ams.scw.cloud/njkonl/transit-radar:0.1
        resources:
          limits:
            memory: "128Mi"
            cpu: "1100m"
          requests:
            memory: "80Mi"
            cpu: "10m"
        startupProbe:
          httpGet:
            path: /
            port: 80
          failureThreshold: 30
          periodSeconds: 10
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: regcred

---

apiVersion: v1  
kind: Service
metadata:
  name: transit-radar
spec:
  selector:
    app: transit-radar
  ports:
  - port: 80
    targetPort: 80

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: transit-radar
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: transit-radar.njk.onl
    http:
      paths:
      - path: /
        backend:
          serviceName: transit-radar
          servicePort: 80
  tls:
  - hosts:
    - transit-radar.njk.onl
    secretName: transit-radar-cert

---

apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: transit-radar
spec:
  dnsNames:
  - transit-radar.njk.onl
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: letsencrypt-production
  secretName: transit-radar-cert
