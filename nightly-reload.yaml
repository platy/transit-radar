---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: transit-radar-restart
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: transit-radar-restart
rules:
  - apiGroups: ["apps", "extensions"]
    resources: ["deployments"]
    resourceNames: ["transit-radar"]
    verbs: ["get", "patch", "list", "watch"] # "list" and "watch" are only needed
                                             # if you want to use `rollout status`
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: transit-radar-restart
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: transit-radar-restart
subjects:
  - kind: ServiceAccount
    name: transit-radar-restart

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: transit-radar-restart
spec:
  concurrencyPolicy: Forbid
  schedule: '0 4 * * *'
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 600 
      template:
        spec:
          serviceAccountName: transit-radar-restart
          restartPolicy: Never
          containers:
            - name: kubectl
              image: bitnami/kubectl
              command:
                - bash
                - -c
                - >-
                  kubectl rollout restart deployment/transit-radar &&
                  kubectl rollout status deployment/transit-radar
